#!/usr/bin/env bash

# shellcheck shell=bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: DomainTrace()
#
# Description:
#   Trace domain.
#
# Usage:
#   DomainTrace domain
#
# Examples:
#   DomainTrace example.com
#

function DomainTrace() {

  # shellcheck disable=SC2034
  local _FUNCTION_ID="DomainTrace"
  local _STATE=0

  local _host="$1"

  local _timeout="15"

  _http_output=$(curl -ks -m $_timeout \
    -H 'Connection: keep-alive' \
    -H 'Upgrade-Insecure-Requests: 1' \
    -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' \
    -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.9,en-US;q=0.8,en;q=0.7' \
    -w '%{time_total}:%{time_connect}:%{local_ip}:%{local_port}:%{remote_ip}:%{remote_port}:%{http_version}:%{http_code}:%{redirect_url}' \
    -o /dev/null --compressed "$_host")

  if [[ -z "$_http_output" ]] ; then

    # shellcheck disable=SC2034
    _STATE="1"

    _logger "stop" \
      "${_FUNCTION_ID}()" \
      "get redirect error"

  else

    _time_total=$(echo "$_http_output" | cut -d ":" -f1)
    _time_connect=$(echo "$_http_output" | cut -d ":" -f2)
    _local_ip=$(echo "$_http_output" | cut -d ":" -f3)
    _local_port=$(echo "$_http_output" | cut -d ":" -f4)
    _remote_ip=$(echo "$_http_output" | cut -d ":" -f5)
    _remote_port=$(echo "$_http_output" | cut -d ":" -f6)
    _http_version=$(echo "$_http_output" | cut -d ":" -f7)
    _http_code=$(echo "$_http_output" | cut -d ":" -f8)
    _http_redirect=$(echo "$_http_output" | cut -d ":" -f9-)

    # Set local and remote sockets.
    _local_socket="${_local_ip}:${_local_port}"
    _remote_socket="${_remote_ip}:${_remote_port}"

    # Convert times.
    _time_total=$(echo "$_time_total" | tr ',' '.')
    _time_connect=$(echo "$_time_connect" | tr ',' '.')

    # Set properly total time.
    # shellcheck disable=SC2154
    _full_conn_time="$( bc <<<"$_full_conn_time + $_time_total" | awk '{printf "%f", $0}')"

    # Convert _http_version value.
    if [[ "$_http_version" == "2" ]] ; then _http_version="2.0" ; fi

    # shellcheck disable=SC2034
    _STATE="0"

    # shellcheck disable=SC2154
    if [[ "$headers_state" -eq 1 ]] ; then

      # shellcheck disable=SC2086
      printf '\n\e['${h_trgb}'m    %-4.6s %-12.10s %-15.12s %-22.22s %-22.22s %-5.5s %-8.10s %s\e[m' \
             "req" \
             "time_total" \
             "time_connect" \
             "local_socket" \
             "remote_socket" \
             "http" \
             "code" \
             "next_hop"

      # shellcheck disable=SC2086
      printf '\n\e['${l_trgb}'m    %-4.6s %-12.10s %-15.12s %-22.22s %-22.22s %-5.5s %-8.10s %s\e[m\n' \
             "---" \
             "----------" \
             "------------" \
             "------------" \
             "-------------" \
             "----" \
             "----" \
             "--------"

    fi

    # shellcheck disable=SC2086,SC2154
    printf '\e['${c_trgb}'m    %-4.6s %-12.10s %-15.12s %-22.22s %-22.22s %-5.5s %-8.10s %s\e[m\n' \
           "$_req_num" \
           "$_full_conn_time" \
           "$_time_total" \
           "$_local_socket" \
           "$_remote_socket" \
           "$_http_version" \
           "$_http_code" \
           "$_http_redirect"

    if [[ "$headers_state" -eq 1 ]] ; then

      echo

      curl -Iks -m $_timeout \
        -H 'Connection: keep-alive' \
        -H 'Upgrade-Insecure-Requests: 1' \
        -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' \
        -H 'Accept-Encoding: gzip, deflate, br' -H 'Accept-Language: en-US,en;q=0.9,en-US;q=0.8,en;q=0.7' \
        --compressed "$_host" | sed -e 's/^[ \t]*/         › /' | sed 's/\r//' | grep "› ."

    fi

    _logger "info" \
      "${_FUNCTION_ID}()" \
      "get redirect: $_http_output"

  fi

  return $_STATE

}
