#!/usr/bin/env bash

# shellcheck shell=bash

# ``````````````````````````````````````````````````````````````````````````````
# Function name: DomainSslCheck()
#
# Description:
#   Check ssl configuration.
#
# Usage:
#   DomainSslCheck domain
#
# Examples:
#   DomainSslCheck example.com
#

function DomainSslCheck() {

  # shellcheck disable=SC2034
  local _FUNCTION_ID="DomainSslCheck"
  local _STATE=0

  # shellcheck disable=SC2034,SC2154
  _ssl_domain_name="$_domain_name"

  _ssl_params=$(echo | \
                openssl s_client -servername "$_ssl_domain_name" \
                -connect "$_ssl_domain_name":443 2>/dev/null)

  _ssl_params_proto=$(echo "$_ssl_params" | grep "Protocol  :" | cut -d ":" -f2- | tr -d "[:space:]")
  _ssl_params_cipher=$(echo "$_ssl_params" | grep "Cipher    :" | cut -d ":" -f2- | tr -d "[:space:]")
  _ssl_params_verify=$(echo "$_ssl_params" | grep "Verification: \\|Verification error: " | cut -d ":" -f2-)

  if [[ "$_ssl_params_proto" = *"TLSv1"* ]] ; then

    local _ssl_trgb="0;0;32"

  else

    local _ssl_trgb="0;0;31"

  fi

  printf '         ssl: \e[1;1;32m%s\e[m, ' "on"

  # shellcheck disable=SC2086,SC2154
  printf 'version(\e['${_ssl_trgb}'m%s\e[m), cipher(\e['${s_trgb}'m%s\e[m)\n' \
         "$_ssl_params_proto" \
         "$_ssl_params_cipher"

  if [[ "$_ssl_params_verify" == " OK" ]] ; then

    printf '         verification:\e[1;1;32m%s\e[m\n' "$_ssl_params_verify"

  else

    printf '         verification:\e[1;1;31m%s\e[m\n' "$_ssl_params_verify"

  fi

  return $_STATE

}
